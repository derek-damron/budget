, amount = -333
, day = "5"
, recurring = TRUE
)
my_bills <- create_schedule(rent, groceries)
my_bills
load_all()
# I need to pay my bills!
rent <- create_item( name = "Rent"
, amount = -666
, day = "1"
, recurring = TRUE
)
groceries <- create_item( name = "Groceries"
, amount = -333
, day = "5"
, recurring = TRUE
)
my_bills <- create_schedule(rent, groceries)
load_all()
# I need to pay my bills!
rent <- create_item( name = "Rent"
, amount = -666
, day = "1"
, recurring = TRUE
)
groceries <- create_item( name = "Groceries"
, amount = -333
, day = "5"
, recurring = TRUE
)
my_bills <- create_schedule(rent, groceries)
my_bills
rent
groceries
list(rent, groceries)
c(rent, groceries)
list(rent, groceries)
do.call(rbind, list(rent, groceries))
data.frame(do.call(rbind, list(rent, groceries)))
data.frame(do.call(rbind, list(rent, groceries)), stringsAsFactors=FALSE)
load_all()
create_schedule(rent, groceries)
as.data.frame(create_schedule(rent, groceries))
as.data.frame(create_schedule(rent, groceries))$day
create_schedule(rent, groceries)$day
load_all()
create_schedule(rent, groceries)
?order
load_all()
create_schedule(rent, groceries)
do.call(rbind, list(rent, groceries))
load_all()
create_schedule(rent, groceries)
create_schedule(rent, groceries)
load_all()
create_schedule(rent, groceries)
schedule_df
class(schedule_df)
order(schedule_df$day)
"day" %in% names(schedule_df)
order(schedule_df$day)
schedule_df$day
items
lapply(items, rbind)
do.call(rbind.data.frame, items)
sapply(schedule_df, class)
sapply(do.call(rbind.data.frame, items), class)
items
lapply(items, function(x) x$day)
class(schedule_df)
sapply(schedule_df, class)
lapply(schedule_df, unlist)
data.frame(lapply(schedule_df, unlist))
sapply(data.frame(lapply(schedule_df, unlist)), class)
unis
units
items
lapply(items, unlist)
do.call(rbind, lapply(items, unlist))
data.frame(do.call(rbind, lapply(items, unlist)), stringsAsFactors=FALSE)
sapply(data.frame(do.call(rbind, lapply(items, unlist)), stringsAsFactors=FALSE), class)
items
data.frame(t(sapply(rent, c)))
data.frame(t(sapply(items, c)))
sapply(data.frame(t(sapply(items, c))), class)
items
?do.call
do.call(rbind, items)
do.call(rbind.data.frame, items)
?rbind.data.frame
do.call(rbind.data.frame, items, make.row.names=FALSE)
do.call(rbind.data.frame, list(...=items, make.row.names=FALSE))
rbind(rent, groceries)
as.data.frame(rbind(rent, groceries))
sapply(as.data.frame(rbind(rent, groceries)), class)
sapply(as.data.frame(rbind(items)), class)
do.call(rbind, items)
class(do.call(rbind, items))
?as.data.frame
?as.data.frame.list
rent
as.data.frame(rent)
?inherit
?inherits
class(rent)
class(rent) <- c("item", "list")
rent
class(rent)
as.data.frame(rent)
sapply(as.data.frame(rent), class)
load_all()
?create_item
# I need to pay my rent!
rent <- create_item( name = "Rent"
, amount = -666
, day = "1"
, recurring = TRUE
)
rent
# I need to pay my rent!
rent <- create_item( name = "Rent"
, amount = -666
, day = "1"
, recurring = TRUE
)
rent
load_all()
# I need to pay my rent!
rent <- create_item( name = "Rent"
, amount = -666
, day = "1"
, recurring = TRUE
)
rent
rent$name
class(rent)
?create_schedule
# I need to pay my bills!
rent <- create_item( name = "Rent"
, amount = -666
, day = "1"
, recurring = TRUE
)
groceries <- create_item( name = "Groceries"
, amount = -333
, day = "5"
, recurring = TRUE
)
rent
groceries
create_schedule(rent, groceries)
load_all()
create_schedule(rent, groceries)
items
class(items)
lapply(items, class)
do.call(rbind, items)
do.call(rbind.data.frame, items)
sapply(do.call(rbind.data.frame, items), class)
schedule_df
class(schedule_df)
sapply(schedule_df, class)
?rbind.list
?rbind.data.frame
schedule_df <- do.call(rbind.data.frame, items)
schedule_df
sapply(schedule_df, class)
schedule_df <- do.call(rbind.data.frame, c(items, stringsAsFactors=FALSE))
schedule_df
schedule_df <- do.call(rbind.data.frame, list(items, stringsAsFactors=FALSE))
schedule_df <- do.call(rbind, items)
schedule_df
sapply(schedule_df, class)
schedule_df <- data.frame(do.call(rbind, items), stringsAsFactors=FALSE)
schedule_df
sapply(schedule_df, class)
library(plyr)
items
?plyr::ldply
ldply(items)
is.atomic(1;2)
is.atomic(1:2)
is.atomic(list(1, 2))
ldply(items)
lapply(items, c)
lapply(items, as.vector)
ldply(lapply(items, as.vector))
list(1:2, 3:4)
ldply(list(1:2, 3:4))
rent
rent
as.vector(rent)
class(as.vector(rent))
vector(rent)
do.call(rbind.data.frame, items)
create_schedule(rent, groceries)
do.call(rbind, items)
create_schedule(rent, groceries)
do.call(rbind, items)
do.call(rbind.data.frame, items)
lapply(do.call(rbind.data.frame, items), unlist)
data.frame(lapply(do.call(rbind.data.frame, items), unlist), stringsAsFactors=FALSE)
class(data.frame(lapply(do.call(rbind.data.frame, items), unlist), stringsAsFactors=FALSE))
sapply(data.frame(lapply(do.call(rbind.data.frame, items), unlist), stringsAsFactors=FALSE), class)
sapply(as.data.frame(lapply(do.call(rbind.data.frame, items), unlist), stringsAsFactors=FALSE), class)
schedule_df
class(schedule_df)
sapply(schedule_df, class)
lapply(schedule_df, unlist)
as.data.frame(lapply(schedule_df, unlist))
class(as.data.frame(lapply(schedule_df, unlist)))
sapply(as.data.frame(lapply(schedule_df, unlist)), class)
sapply(as.data.frame(lapply(schedule_df, unlist), stringsAsFactors = FALSE), class)
sapply(data.frame(lapply(schedule_df, unlist), stringsAsFactors = FALSE), class)
load_all()
create_schedule(rent, groceries)
schedule_df
sapply(schedule_df, class)
order(schedule_df$day)
schedule_df
schedule_df <- data.frame(do.call(rbind, items), stringsAsFactors=FALSE)
schedule_df <- data.frame(lapply(schedule_df, unlist), stringsAsFactors = FALSE)
schedule_df <- schedule_df[order(schedule_df$day), ]
schedule_df
schedule
class(schedule)
load_all()
?create_schedule
# I need to pay my bills!
rent <- create_item( name = "Rent"
, amount = -666
, day = "1"
, recurring = TRUE
)
groceries <- create_item( name = "Groceries"
, amount = -333
, day = "5"
, recurring = TRUE
)
my_bills <- create_schedule(rent, groceries)
load_all
load_all()
# I need to pay my bills!
rent <- create_item( name = "Rent"
, amount = -666
, day = "1"
, recurring = TRUE
)
groceries <- create_item( name = "Groceries"
, amount = -333
, day = "5"
, recurring = TRUE
)
my_bills <- create_schedule(rent, groceries)
my_bills
rent
is.item(rent)
inherits(rent, "item")
load_all()
document()
sys.date
Sys.Date()
class(Sys.Date())
Sys.Date() + 30
Sys.Date() + 90
load_all()
create_budget
create_budget()
load_all(); create_budget()
load_all(); create_budget()
load_all(); create_budget()
load_all(); create_budget(a)
load_all(); create_budget("a")
Sys.Date() < Sys.Date() + 30
ls
ls()
do.call(class, list=ls())
do.call(class, list(ls()))
ls()
lapply(ls)
lapply(ls, function(x) class(x))
lapply(ls(), function(x) class(x))
sapply(ls(), function(x) class(x))
?lapply
vapply(ls(), function(x) class(x))
vapply(ls(), function(x) class(x), list)
vapply(ls(), function(x) class(x), list())
lapply(ls(), function(x) class(x)
)
lapply(ls(), function(x) x=class(x)
)
lapply(ls(), function(x) x=c(class(x))
)
lapply(ls(), function(x) do.call(class, x))
lapply(ls(), function(x) do.call(class, list(x))
)
ls()
groceries
"groceries"
deparse("groceries")
eval(deparse("groceries"))
get("groceries")
class(get("groceries"))
is.item(get("groceries"))
lapply(ls(), function(x) is.item(get(x)))
sapply(ls(), function(x) is.item(get(x)))
?ls
sapply(ls(pattern="r"), function(x) is.item(get(x)))
load_all()
ls()
create_schedule(rent, groceries)
ls()
ls()
...
items
class(items)
class(...)
ls -la
load_all()
load_all()
create_schedule(rent, groceries)
...
class()
class(...)
length(...)
load_all()
create_schedule(paycheck, rent, groceries)
?create_budget
load_all()
?create_budget
document()
?create_budget
paycheck <- create_item( name = "Paycheck"
, amount = 1050
, day = "1"
, recurring = TRUE
)
rent <- create_item( name = "Rent"
, amount = -800
, day = "1"
, recurring = TRUE
)
groceries <- create_item( name = "Groceries"
, amount = -200
, day = "5"
, recurring = TRUE
)
my_bills <- create_schedule(paycheck, rent, groceries)
my_bills
seq(Sys.Date(), Sys.Date()+90, by=1)
class(seq(Sys.Date(), Sys.Date()+90, by=1))
weekdays(Sys.Date())
format(Sys.Date(), "%m")
format(Sys.Date(), "%d")
str(create_schedule(paycheck, rent, groceries))
create_schedule(paycheck, rent, groceries)$df
sapply(create_schedule(paycheck, rent, groceries)$df, class)
class(format(Sys.Date(), "%m"))
load_all()
create_budget(my_bills)
Sys.Date()
class(Sys.Date())
is(Sys.Date(), "Date")
is.Date(Sys.Date())
load_all()
create_budget(my_bills)
load_all()
create_budget(my_bills)
ls()
schedule
start
end
initial
data.frame(date = seq(start, end, by=1))
budget <- data.frame(date = seq(start, end, by=1))
# Extract the day and remove leading zeros
budget$day <- format(budget$date, "%d")
budget$day <- as.character(as.numeric(budget$dat))
budget
# Initialize budget
budget <- data.frame(date = seq(start, end, by=1))
# Extract the day and remove leading zeros
budget$day <- format(budget$date, "%d")
budget$day <- as.character(as.numeric(budget$day))
budget
# Extract the month and remove leading zeros
budget$month <- format(budget$date, "%m")
budget$mont <- as.character(as.numeric(budget$month))
budget$mont <- NULL
budget
# Initialize budget
budget <- data.frame(date = seq(start, end, by=1))
# Extract the day and remove leading zeros
budget$day <- format(budget$date, "%d")
budget$day <- as.character(as.numeric(budget$day))
# Extract the month and remove leading zeros
budget$month <- format(budget$date, "%m")
budget$month <- as.character(as.numeric(budget$month))
budget
budget$month <- NULL
# Initialize budget
budget <- data.frame(date = seq(start, end, by=1))
# Extract the day and remove leading zeros
budget$day <- format(budget$date, "%d")
budget$day <- as.character(as.numeric(budget$day))
head(budget)
tail(budget)
schedule
merge(budget, schedule$df, by="day")
?merge
merge(budget, schedule$df, by="day", sort=FALSE)
budget <- merge(budget, schedule$df, by="day")
# Sort chronologically
budget
budget[order(budget$date),]
# Create initial row
budget_initial <- data.frame( day = as.character(as.numeric(format(start, "%d")))
, date = start
, name = "Inital Amount"
, amount = initial
, recurring = FALSE
)
# Create budget template
budget <- data.frame(date = seq(start, end, by=1))
# Extract the day and remove leading zeros
budget$day <- format(budget$date, "%d")
budget$day <- as.character(as.numeric(budget$day))
# Merge in schedule
budget <- merge(budget, schedule$df, by="day")
# Sort chronologically
budget <- budget[order(budget$date), ]
# Add initial row
budget <- rbind( budget_initial, budget)
budget
budget$amount_rolling <- cumsum(budget$amount)
budget
budget$amount_rolling <- NULL
budget$balance <- cumsum(budget$amount)
budget
load_all()
document()
?create_budget
#####
# Common use cases
#
# I need to pay my bills!
paycheck <- create_item( name = "Paycheck"
, amount = 1050
, day = "1"
, recurring = TRUE
)
rent <- create_item( name = "Rent"
, amount = -800
, day = "1"
, recurring = TRUE
)
groceries <- create_item( name = "Groceries"
, amount = -200
, day = "5"
, recurring = TRUE
)
my_bills <- create_schedule(paycheck, rent, groceries)
my_budget <- create_budget(my_bills)
load_all()
#####
# Common use cases
#
# I need to pay my bills!
paycheck <- create_item( name = "Paycheck"
, amount = 1050
, day = "1"
, recurring = TRUE
)
rent <- create_item( name = "Rent"
, amount = -800
, day = "1"
, recurring = TRUE
)
groceries <- create_item( name = "Groceries"
, amount = -200
, day = "5"
, recurring = TRUE
)
my_bills <- create_schedule(paycheck, rent, groceries)
my_budget <- create_budget(my_bills)
load_all()
# Objectify!
#####
# Common use cases
#
# I need to pay my bills!
paycheck <- create_item( name = "Paycheck"
, amount = 1050
, day = "1"
, recurring = TRUE
)
rent <- create_item( name = "Rent"
, amount = -800
, day = "1"
, recurring = TRUE
)
groceries <- create_item( name = "Groceries"
, amount = -200
, day = "5"
, recurring = TRUE
)
my_bills <- create_schedule(paycheck, rent, groceries)
my_budget <- create_budget(my_bills)
my_budget
load_all()
my_budget
